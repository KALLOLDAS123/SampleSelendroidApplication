<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="174164" started-at="2019-02-22T10:52:43Z" finished-at="2019-02-22T10:55:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="174164" started-at="2019-02-22T10:52:43Z" finished-at="2019-02-22T10:55:37Z">
      <class name="testcases.SampleSelendroidTestSuits">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="setUp" is-config="true" duration-ms="206" started-at="2019-02-22T10:52:38Z" finished-at="2019-02-22T10:52:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="setup" is-config="true" duration-ms="4589" started-at="2019-02-22T10:52:39Z" depends-on-methods="Component.TestReports.setUp" finished-at="2019-02-22T10:52:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="init" is-config="true" duration-ms="263" started-at="2019-02-22T10:52:43Z" finished-at="2019-02-22T10:52:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="test001Userregistration()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="test001Userregistration" duration-ms="72644" started-at="2019-02-22T10:52:44Z" finished-at="2019-02-22T10:53:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001Userregistration -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="getResult" is-config="true" duration-ms="8" started-at="2019-02-22T10:53:56Z" finished-at="2019-02-22T10:53:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test001Userregistration status=SUCCESS method=SampleSelendroidTestSuits.test001Userregistration()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="test002ProgressBarHandle()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="test002ProgressBarHandle" duration-ms="21205" started-at="2019-02-22T10:53:56Z" finished-at="2019-02-22T10:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002ProgressBarHandle -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="getResult" is-config="true" duration-ms="0" started-at="2019-02-22T10:54:17Z" finished-at="2019-02-22T10:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test002ProgressBarHandle status=SUCCESS method=SampleSelendroidTestSuits.test002ProgressBarHandle()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="test003PopUpWindowHandle()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="test003PopUpWindowHandle" duration-ms="73509" started-at="2019-02-22T10:54:17Z" finished-at="2019-02-22T10:55:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003PopUpWindowHandle -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="getResult" is-config="true" duration-ms="0" started-at="2019-02-22T10:55:31Z" finished-at="2019-02-22T10:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test003PopUpWindowHandle status=SUCCESS method=SampleSelendroidTestSuits.test003PopUpWindowHandle()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="test004EndActivity()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="test004EndActivity" duration-ms="6506" started-at="2019-02-22T10:55:31Z" finished-at="2019-02-22T10:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004EndActivity -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="getResult" is-config="true" duration-ms="1" started-at="2019-02-22T10:55:37Z" finished-at="2019-02-22T10:55:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test004EndActivity status=SUCCESS method=SampleSelendroidTestSuits.test004EndActivity()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="teardown" is-config="true" duration-ms="923" started-at="2019-02-22T10:55:38Z" finished-at="2019-02-22T10:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:testcases.SampleSelendroidTestSuits@2f686d1f]" name="tearDown" is-config="true" duration-ms="243" started-at="2019-02-22T10:55:39Z" depends-on-methods="base.TestBase.teardown" finished-at="2019-02-22T10:55:39Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/bson/types/ObjectId]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/bson/types/ObjectId
at java.lang.Class.getDeclaredMethods0(Native Method)
at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
at java.lang.Class.privateGetPublicMethods(Class.java:2902)
at java.lang.Class.getMethods(Class.java:1615)
at freemarker.ext.beans.ClassIntrospector.discoverAccessibleMethods(ClassIntrospector.java:736)
at freemarker.ext.beans.ClassIntrospector.discoverAccessibleMethods(ClassIntrospector.java:729)
at freemarker.ext.beans.ClassIntrospector.createClassIntrospectionData(ClassIntrospector.java:281)
at freemarker.ext.beans.ClassIntrospector.get(ClassIntrospector.java:257)
at freemarker.ext.beans.BeanModel.<init>(BeanModel.java:110)
at freemarker.ext.beans.BeanModel.<init>(BeanModel.java:101)
at freemarker.ext.beans.StringModel.<init>(StringModel.java:52)
at freemarker.ext.beans.StringModel$1.create(StringModel.java:38)
at freemarker.ext.beans.BeansModelCache.create(BeansModelCache.java:72)
at freemarker.ext.util.ModelCache.getInstance(ModelCache.java:80)
at freemarker.ext.beans.BeansWrapper.wrap(BeansWrapper.java:912)
at freemarker.template.DefaultObjectWrapper.handleUnknownType(DefaultObjectWrapper.java:269)
at freemarker.template.DefaultObjectWrapper.wrap(DefaultObjectWrapper.java:248)
at freemarker.template.WrappingTemplateModel.wrap(WrappingTemplateModel.java:112)
at freemarker.template.DefaultListAdapter.get(DefaultListAdapter.java:76)
at freemarker.core.DynamicKeyName.dealWithNumericalKey(DynamicKeyName.java:105)
at freemarker.core.DynamicKeyName._eval(DynamicKeyName.java:71)
at freemarker.core.Expression.eval(Expression.java:83)
at freemarker.core.Assignment.accept(Assignment.java:134)
at freemarker.core.Environment.visit(Environment.java:330)
at freemarker.core.Environment.visit(Environment.java:336)
at freemarker.core.Environment.visit(Environment.java:336)
at freemarker.core.Environment.process(Environment.java:309)
at freemarker.template.Template.process(Template.java:384)
at com.aventstack.extentreports.reporter.ExtentHtmlReporter.flush(ExtentHtmlReporter.java:142)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at com.aventstack.extentreports.Report.notifyReporters(Report.java:263)
at com.aventstack.extentreports.Report.flush(Report.java:185)
at com.aventstack.extentreports.ExtentReports.flush(ExtentReports.java:281)
at Component.TestReports.tearDown(TestReports.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:425)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
Caused by: java.lang.ClassNotFoundException: org.bson.types.ObjectId
at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 54 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.SampleSelendroidTestSuits -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
